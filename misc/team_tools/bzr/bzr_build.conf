#
# example implementation of function that rebuilds
# project. if you do not need this comment out all
# function lines, except for 'return 0'.
#
function build_project
{
  # check for tabs and trailing spaces
  echo "###"
  echo "### CHECKING for tabulators and trailing spaces in sources ###"
  echo "###"
  if grep -l -e $'\t' -e ' \+$' ` find . -iname '*.c' -o \
                                         -iname '*.cpp' -o \
                                         -iname '*.h' -o \
                                         -iname '*.hpp' `
  then
    echo >&2
    echo "ERROR: tabulators/trailing spaces found in the files listed above." >&2
    echo "ERROR: fix this before delivery." >&2
    return 102
  fi

  # auto-detect supported toolchains
  which gcc >/dev/null 2>&1 && TOOLCHAINS="$TOOLCHAINS local"
  which icc >/dev/null 2>&1 && TOOLCHAINS="$TOOLCHAINS intel"

  # check how many CPUs can be used
  local CPUS="`{ cat /proc/cpuinfo  | grep processor | wc -l ; echo -n '+ 1' ; } | xargs expr`"

  # build all profiles (default features set)
  for tc in $TOOLCHAINS
  do
    for p in debug release test mtest profile doc
    do
      echo "###"
      echo "### BUILDING '$p' profile with '$tc' toolchain ###"
      echo "###"
      make PROFILE="$p" TC="$tc" "-j$CPUS" || return $?
    done
  done

  return 0
}
