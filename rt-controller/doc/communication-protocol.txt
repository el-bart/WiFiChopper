RT-board communication protocol

this document describes protocol used to communicate with RT-board device,
via USART (i.e. serial) interface. commands are always initiated from external
controller (i.e. host).

protocol is textual. each request and response consist of one line ended by EOL ("\n" character).


greeting message
----------------
command:
hello
reponse:
WiFiChopper RT-board vX.Y.Z
where
X,Y and Z are main, major and minor version numbers. for example:
WiFiChopper RT-board v1.0.3
means the board's software is in main version 1, major version 0 and minor 3.


accelerometer reading
---------------------
command:
accel?
response:
X Y Z
where:
X,Y,Z are readings of OX, OY and OZ axises respectively. values are expressed in one byte,
hex form. for example:
01 FF A6
means OX=1, OY=255, OZ=166. acceleration of 1g is equivalent to about 90. since board is
usually not mounted exactly, it is crucial to calibrate reads, using flat surface as a
reference point.


engine speed reading
--------------------
command:
eng?
response:
A B CD
where:
A, B and D are hex values of engine speeds, assigned to the main 1, main 2 and rear engine,
respectively. C is "+" or "-" character, reflecting forward or backward thrust of the
rear engine, respectively. for example:
A0 AA +FF
means main engine 1 power set to 160 (0xA0), main engine 2 set to 170 (0xAA) and rear engine
set to 255 (0xFF), to forward thrust (+).


engine speed setting
--------------------
command:
engset A B CD
where:
A, B and D are hex values of engine speeds, assigned to the main 1, main 2 and rear engine,
respectively. C is "+" or "-" character, reflecting forward or backward thrust of the
rear engine, respectively. for example:
engset A0 AA -42
means to set main engine 1 power to 160 (0xA0), main engine 2 to 170 (0xAA) and rear engine
to 66 (0x42), to backward thrust (-).
response:
setABCD
where meaning of A, B, C and D is the same as in the request.


battery voltage
---------------
command:
vin?
response:
A
where A is hex value read from the ADC. to compute the actual voltage use the following equation:
Vin=(3*A*4*5)/1024


communication lost protector enable
-----------------------------------
command:
enableclp
reponse:
enabled
command enables CLP (Communication Lost Protector) mechanism. it automatically restes uC, when no
new command arrives within about 3.1 second. after device reset this mechanism is disabled.


error response
--------------
in case of error following response is returned:
ERROR: M
where M is a string message informing what happened. note that M can be empty.
